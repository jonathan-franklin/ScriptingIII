global proc MasterControlCreator ()
{
    window  -title "Master Control Program" -widthHeight 300 200;
        frameLayout -label "Control Parameters" -collapsable true; 
            rowLayout -numberOfColumns 2;
                columnLayout;
                    text -label "Select Control Shape";
			    // create the first radio collection
                    $radio1 = `radioCollection`;
            
                        // add some radio buttons to the collection
                        $circle  = `radioButton -label "Circle"`;
                        $star = `radioButton -label "Star"`;
                        $square = `radioButton -label "Square"`;
                setParent ..;
                
                swatchDisplayPort -enable true -pc colorEditor -highlightColor 0 0 0 -wh 256 256 slPP ;
                //button -label "Open Color Selector";
            setParent ..;
        setParent ..;
        
        frameLayout -label "Execute" -collapsable false;
            rowLayout -numberOfColumns 2;
                button -label "Create Controls" -command "CreateControls";
                button -label "Color Controls" -command "Colorizer";
            setParent ..;
        setParent ..;
    showWindow;
}

global proc CreateControls ()
{
    string $sels[] = `ls -sl`;

    for ($sel in $sels)
    {
        string $ctrls[] = `circle -name ($sel + "_Ctrl")`;
        string $ctrl = $ctrls[0];

        string $grps[] = `Group -name ($sel + "_Ctrl_Grp")`;
        string $grp = $grps[0];

        ColorControl($ctrl, 2);

        vector $jointPosition = `xform -worldSpace`;
        xform -translation $jointPosition $grp;

    }
}


global proc Colorizer()
{
    string $ctrls[];
    
    $ctrls = `ls -sl`;
    
    for ($ctrl in $ctrls)
    {
        ColorControl($ctrl, 2);
    }
}

global proc ColorControl(string $ctrl, int $color)
{
    // This scripts sets the color of controls   

    //define string array for shapes
    string $shapes[];

    //setAttr "nurbsCircleShape2.overrideEnabled" 1;
    // Find the shape node on control
    $shapes = `listRelatives -shapes $ctrl`;

    for ($shape in $shapes)
    {
        if (`nodeType $shape` == "nurbsCurve")
        {
            // enable override on $Ctrl shape
            setAttr ($shape + ".overrideEnabled") 1;

            // set shape color on $Ctrl to $color
            setAttr ($shape + ".overrideColor") $color;
        }
        else
        {
            warning("Selected object is not a curve.");
        }
    }

}

global proc MatchTransform()
{

}
/*
global proc string CenterLocator ()
{
    // Assign selection to an array
    string $sels[] = `ls -sl`;
    // Duplicating the selection as a temp object
    // and assigning to new array
    string $temp[] = `duplicate -rr $sels`;

    // Check whether more than one object in sels
    if (size($temp) > 1)
    {
        $temp = `polyUnite $temp`;
    }

    float $bbPos[];
    $bbPos = `xform -q -boundingBox $temp`;
    delete -constructionHistory $temp[0];
    delete $temp[0];

    float $xPos, $yPos, $xPos;
    $xPos = ($bbPos[0] + $bbPos[3]) / 2;
    $yPos = ($bbPos[1] + $bbPos[4]) / 2;
    $zPos = ($bbPos[2] + $bbPos[5]) / 2;

    string $loc[] = `spaceLocator - name "TempLocator" -position 0 0 0`;
    xform -translation $xPos $yPos $zPos - worldSpace -absolute $loc[0];

    //return $loc[0];
}
*/
MasterControlCreator()
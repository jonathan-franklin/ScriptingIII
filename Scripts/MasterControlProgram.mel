source "MyScripts/Rename.mel";
source "MyScripts/RandomPlacement.mel";
source "MyScripts/CreateControls.mel";

global proc MasterControlProgram ()
{
    window  -title "Master Control Program" -widthHeight 500 300;
        frameLayout -label "Renamer" -collapsable false; 
            columnLayout -rowSpacing 5;
                textField -placeholderText "Prefix_##_Suffix" -width 200 RenameField;

                button -label "Execute" -command "CheckRenameField";
            setParent ..;
        setParent ..;
        
        frameLayout -label "Random Placer" -collapsable false -height 75;
            columnLayout -rowSpacing 5;
                rowLayout -numberOfColumns 4 -columnWidth4 100 2 100 100;
                    text -label "# of Duplicates";
                    separator -style "single";
                    text -label "Min Range";
                    text -label "Max Range";
                setParent ..;
                
                rowLayout -numberOfColumns 4 -columnWidth4 100 2 100 100;
                    intField duplicatesField;
                    separator -style "single";
                    floatField minRangeField;
                    floatField maxRangeField;
                setParent ..;

                rowLayout -numberOfColumns 1;
                    button -label "Execute" -command "CheckRandomizerFields";
                setParent ..;
            setParent ..;
        setParent ..;

        frameLayout -label "Controls" -collapsable false;
            rowLayout -numberOfColumns 1;
                button -label "Open Control Utility" -command "MasterControlCreator";
            setParent ..;
        setParent ..;

    showWindow;
}

global proc CheckRenameField ()
{
    string $input = `textField -q -text RenameField`;
    Renamer($input);
}

global proc CheckRandomizerFields ()
{
    int $duplicates = `intField -q -value duplicatesField`;
    float $minRange = `floatField -q -value minRangeField`;
    float $maxRange = `floatField -q -value maxRangeField`;

    RandomPlacer($duplicates, $minRange, $maxRange);
}